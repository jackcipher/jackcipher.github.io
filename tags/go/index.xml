<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Jack</title>
    <link>https://jackcipher.github.io/tags/go/</link>
    <description>Recent content in go on Jack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 20 Sep 2023 13:50:58 +0800</lastBuildDate>
    <atom:link href="https://jackcipher.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>构建跨平台 Go 服务</title>
      <link>https://jackcipher.github.io/posts/build-multiarch-go/</link>
      <pubDate>Wed, 20 Sep 2023 13:50:58 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/build-multiarch-go/</guid>
      <description>在过去，我的开发主机一直都是 x86_64 架构的 MacBook Pro，而我的服务器的环境也是 x86_64 架构的 CentOS.在这之前，我一直不用为支持多架构 Docker 镜像构建而烦恼。</description>
    </item>
    <item>
      <title>Go RPC 初探</title>
      <link>https://jackcipher.github.io/posts/go-rpc/</link>
      <pubDate>Tue, 19 Apr 2022 19:44:28 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/go-rpc/</guid>
      <description>RPC 技术分享 RPC 介绍 远程过程调用(Remote Procedure Call 缩写 RPC)是一个计算机通信协议,通俗来讲就是调用远程服务上的一个函数，在调用时将对象名、函数</description>
    </item>
    <item>
      <title>Go 之 Delve 调试</title>
      <link>https://jackcipher.github.io/posts/go-delve/</link>
      <pubDate>Sun, 20 Mar 2022 19:40:53 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/go-delve/</guid>
      <description>准备工作 安装 delve 项目代码 1 2 git clone git@git.baijiashilian.com:web/demo/go-debug-demo.git git clone git@git.baijiashilian.com:web/gotools/gitlab-tools.git 调试工具 delve delve 安装 https://github.com/go-delve/delve/tree/master/Documentation/installation 1 go install github.com/go-delve/delve/cmd/dlv@latest dlv 配置 1 ~/.dlv/config.yml 调试方式 本地调试 从源码开始编译并开始调试 1 dlv debug [package] [flags] 调试已经编译好的</description>
    </item>
  </channel>
</rss>
