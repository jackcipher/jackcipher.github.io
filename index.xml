<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jack</title>
    <link>https://jackcipher.github.io/</link>
    <description>Recent content on Jack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 04 Jan 2024 06:30:24 +0000</lastBuildDate>
    <atom:link href="https://jackcipher.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>构建跨平台 Go 服务</title>
      <link>https://jackcipher.github.io/posts/build-multiarch-go/</link>
      <pubDate>Wed, 20 Sep 2023 13:50:58 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/build-multiarch-go/</guid>
      <description>在过去，我的开发主机一直都是 x86_64 架构的 MacBook Pro，而我的服务器的环境也是 x86_64 架构的 CentOS.在这之前，我一直不用为支持多架构 Docker 镜像构建而烦恼。</description>
    </item>
    <item>
      <title>Docker 下 Filebeat 日志收集</title>
      <link>https://jackcipher.github.io/posts/docker-filebeat/</link>
      <pubDate>Sat, 05 Mar 2022 19:03:19 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/docker-filebeat/</guid>
      <description>背景 在收集服务端聊天消息日志时，用到了 Filebeat dissect 语法，而这个语法是 Filebeat 6.4 及之后的版本支持。服务端部分机器的 Filebeat 版本为 6.3 考虑到日志收集工作的普遍性，为了</description>
    </item>
    <item>
      <title>GitLab CI Variable</title>
      <link>https://jackcipher.github.io/posts/gitlab-ci-variable/</link>
      <pubDate>Thu, 04 Jan 2024 06:30:24 +0000</pubDate>
      <guid>https://jackcipher.github.io/posts/gitlab-ci-variable/</guid>
      <description>CI/CD 变量是环境变量的一种，通过设置 CI/CD 变量可以： 控制 job 与 pipeline 的行为 存储想复用的变量 避免在 .gitlab-ci.yml 文件中硬编码 CD/CD 的变量定义主要通过两种方式： 通过配置文件 通</description>
    </item>
    <item>
      <title>Logstash in Kuberentes</title>
      <link>https://jackcipher.github.io/posts/logstash-in-kuberentes/</link>
      <pubDate>Wed, 27 Sep 2023 14:51:54 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/logstash-in-kuberentes/</guid>
      <description>Logstash In Kubernetes When perusing the official Logstash documentation at https://www.elastic.co/guide/en/logstash/current/running-logstash-command-line.html#command-line-flags ,we found that there are a lot of configuration files.Deploying a logstash in a Kubernetes environment could be a challenge at first glance, especially when you&amp;rsquo;re not familar with it.
Actually, you might as well keep focus on what configurations Logstash loads if you&amp;rsquo;re planning to run an MVP (Minimum Viable Product) with Logstash.
Mount A Configuration File Mounting a configuration via a configMap into a container enables Logstash to load it with creating the container.</description>
    </item>
    <item>
      <title>Docker 使用的一些总结</title>
      <link>https://jackcipher.github.io/posts/docker-review/</link>
      <pubDate>Mon, 09 Jan 2023 18:19:58 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/docker-review/</guid>
      <description>悬挂镜像 sonarnotify 在 CI/CD 中用到了 Docker 多阶段构建。 在构建完成后，即使每次都删掉了构建后的镜像，通过 docker images 还是能发现一些标签为 的镜像。经过查阅资料发现，这些镜</description>
    </item>
    <item>
      <title>Prometheus Relabel 总结</title>
      <link>https://jackcipher.github.io/posts/prom_relabel/</link>
      <pubDate>Sat, 17 Sep 2022 17:13:47 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/prom_relabel/</guid>
      <description>Prometheus 的配置中有一个非常不起眼却很实用的配置，它就是 relabel 配置。官方文档中，关于 relabel 的介绍并不多，主要以配置项的格式，取值做了一个描述。本文将结合实际</description>
    </item>
    <item>
      <title>Tcpdump in Action</title>
      <link>https://jackcipher.github.io/posts/tcpdump-in-action/</link>
      <pubDate>Tue, 30 Aug 2022 20:24:24 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/tcpdump-in-action/</guid>
      <description>Redis 抓包 1 sudo tcpdump -i eth0 tcp and port 6379 -n -nn -s0 -tttt -w redis.cap</description>
    </item>
    <item>
      <title>Contraction</title>
      <link>https://jackcipher.github.io/oral/contraction/</link>
      <pubDate>Sat, 20 Aug 2022 19:11:38 +0800</pubDate>
      <guid>https://jackcipher.github.io/oral/contraction/</guid>
      <description>want to = wanna
going to = gonna
have got to = gotta
out of = outta
kind of = kinda
a lot of = a lotta
don&amp;rsquo;t know = dunno
give me = gimme
would have = would&amp;rsquo;ve / woulda
what do you = whaddya / waddya
what did you = whadja / wadja</description>
    </item>
    <item>
      <title>Dark L</title>
      <link>https://jackcipher.github.io/oral/dark-l/</link>
      <pubDate>Wed, 17 Aug 2022 17:13:10 +0800</pubDate>
      <guid>https://jackcipher.github.io/oral/dark-l/</guid>
      <description>Dark L Background Plenty of non-native speakers from various language backgrounds may have a hard time with dark L.
Vocabulary all
well
feel
real
kill
email
special
handle
it&amp;rsquo;ll
that it&amp;rsquo;ll</description>
    </item>
    <item>
      <title>口语常用短语</title>
      <link>https://jackcipher.github.io/oral/phrase-in-common/</link>
      <pubDate>Sat, 16 Jul 2022 14:20:10 +0800</pubDate>
      <guid>https://jackcipher.github.io/oral/phrase-in-common/</guid>
      <description>you&amp;rsquo;re they&amp;rsquo;re there&amp;rsquo;re what&amp;rsquo;re you gonna wanna that&amp;rsquo;ll that it&amp;rsquo;ll shoulda,coulda,woulda you&amp;rsquo;ve got I got it for you It&amp;rsquo;s for Just for fun This medicine is for headaches are for These flowers are for the wedding.Lines are for suckers.Coupons are for poor peopel. I&amp;rsquo;ll be at at 标准发音 [æt] 作为 Content Word 时，采用标准发音形式 reduce</description>
    </item>
    <item>
      <title>Prometheus 数据保留时间</title>
      <link>https://jackcipher.github.io/posts/prometheus-retention/</link>
      <pubDate>Thu, 24 Mar 2022 10:12:22 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/prometheus-retention/</guid>
      <description>如何控制 Prometheus 保留多少历史记录？ Prometheus 将时间序列及其样本存储在磁盘上。鉴于磁盘空间是一种有限资源，我们希望对 Prometheus 使用的磁盘空间进行一些限制。在以前的版</description>
    </item>
    <item>
      <title>Go Delve</title>
      <link>https://jackcipher.github.io/posts/go-delve/</link>
      <pubDate>Sun, 20 Mar 2022 19:40:53 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/go-delve/</guid>
      <description>Go 调试 准备工作 安装 delve 项目代码 1 2 git clone git@git.baijiashilian.com:web/demo/go-debug-demo.git git clone git@git.baijiashilian.com:web/gotools/gitlab-tools.git 调试工具 delve delve 安装 https://github.com/go-delve/delve/tree/master/Documentation/installation 1 go install github.com/go-delve/delve/cmd/dlv@latest dlv 配置 1 ~/.dlv/config.yml 调试方式 本地调试 从源码开始编译并开始调试 1 dlv debug [package] [flags] 调试已经编</description>
    </item>
    <item>
      <title>Alertmanager 中的周期参数</title>
      <link>https://jackcipher.github.io/posts/alertmanager-duration-args/</link>
      <pubDate>Mon, 14 Mar 2022 08:42:52 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/alertmanager-duration-args/</guid>
      <description>在 Alertmanager 中有三个跟周期相关的参数，分别是 group_wait, group_interval, repeat_interval。合理地配置参数，有利于降低告警频率，避免告警风暴产生。 在深入了解这三</description>
    </item>
    <item>
      <title>Prometheus 增加身份认证</title>
      <link>https://jackcipher.github.io/posts/prom_with_auth/</link>
      <pubDate>Sat, 12 Mar 2022 16:22:20 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/prom_with_auth/</guid>
      <description>Prometheus 除了提供时序数据库和监控系统存在，其本身也对外提供了 Web 服务，用于提供报表展示及表达式计算，以及用于更新配置文件等功能的 API。 处于安全考虑</description>
    </item>
    <item>
      <title>ServiceAccount 的使用</title>
      <link>https://jackcipher.github.io/posts/service-account/</link>
      <pubDate>Thu, 10 Mar 2022 23:01:08 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/service-account/</guid>
      <description>概念 Kubernetes 中，Pod 内部进程想要访问 API Server，就需要用到 ServiceAccount。ServiceAccount 类似业务系统里的账户，用</description>
    </item>
    <item>
      <title>PaperMod 主题下代码高亮最佳实践</title>
      <link>https://jackcipher.github.io/posts/papermod-highlight/</link>
      <pubDate>Sat, 05 Mar 2022 21:20:01 +0800</pubDate>
      <guid>https://jackcipher.github.io/posts/papermod-highlight/</guid>
      <description>背景 PaperMod 主题默认使用的是 highlight.js, 这是一种由 js 生成的高亮方案。相比 highlight.js, Hugo 官方更倾向使用 Chroma 来生成代码高亮。 Chroma 是由 Go 写的语法高亮工具，其编译速度更快，且 Hugo 内</description>
    </item>
  </channel>
</rss>
